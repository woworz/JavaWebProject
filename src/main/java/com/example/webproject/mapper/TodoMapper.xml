<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.webproject.mapper.TodoMapper">

    <!-- ResultMap 用于映射数据库字段到实体类属性 -->
    <resultMap id="TodoMap" type="com.example.webproject.entity.Todo">
        <id column="id" property="id" />
        <result column="title" property="title" />
        <result column="description" property="description" />
        <result column="completed" property="completed" />
        <association property="user" column="user_id" javaType="com.example.webproject.entity.User">
            <id column="id" property="id" />
            <result column="username" property="username" />
            <result column="password" property="password" />
        </association>
    </resultMap>

    <!-- 查询用户的所有待办事项 -->
    <select id="getTodosByUserId" resultMap="TodoMap">
        SELECT t.id, t.title, t.description, t.completed, t.user_id, u.username, u.password
        FROM todos t
                 JOIN users u ON t.user_id = u.id
        WHERE t.user_id = #{userId}
    </select>

    <!-- 插入待办事项 -->
    <insert id="insertTodo">
        INSERT INTO todos (title, description, completed, user_id)
        VALUES (#{title}, #{description}, #{completed}, #{user.id})
    </insert>

    <!-- 更新待办事项 -->
    <update id="updateTodo">
        UPDATE todos
        SET title = #{title}, description = #{description}, completed = #{completed}
        WHERE id = #{id}
    </update>

    <!-- 删除待办事项 -->
    <delete id="deleteTodo">
        DELETE FROM todos
        WHERE id = #{id}
    </delete>
</mapper>
